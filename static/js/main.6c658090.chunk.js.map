{"version":3,"sources":["Components/Header.js","Components/MemeApp.js","Components/MemeGenerator.js","App.js","index.js"],"names":["Header","className","MemeApp","props","src","state","memeImg","alt","topText","bottomText","onSubmit","handleSubmit","type","name","value","onChange","handleChange","placeholder","MemeGenerator","loading","memeAPI","bind","this","setState","fetch","then","response","json","memes","data","Math","floor","random","length","url","event","target","RAND_MEME","preventDefault","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAUeA,MARf,WACI,OACI,iCACI,sBAAKC,UAAU,WAAf,sBAAmC,uBAAnC,wB,0CCwBGC,MA3Bf,SAAiBC,GACb,OACI,sBAAKF,UAAU,UAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKG,IAAKD,EAAME,MAAMC,QAASC,IAAI,SACnC,oBAAIN,UAAU,MAAd,SAAqBE,EAAME,MAAMG,UACjC,oBAAIP,UAAU,SAAd,SAAwBE,EAAME,MAAMI,gBAExC,uBAAMC,SAAUP,EAAMQ,aAAtB,UACI,uBAAOC,KAAK,OACRC,KAAK,UACLC,MAAOX,EAAME,MAAMG,QACnBO,SAAUZ,EAAMa,aAChBC,YAAY,aAEhB,uBAAOL,KAAK,OACRC,KAAK,aACLC,MAAOX,EAAME,MAAMI,WACnBM,SAAUZ,EAAMa,aAChBC,YAAY,gBAEhB,qDCwCDC,E,kDA3DX,aAAe,IAAD,8BACV,gBACKb,MAAQ,CACTc,SAAS,EACTX,QAAS,GACTC,WAAY,GACZH,QAAS,GACTc,QAAS,IAEb,EAAKJ,aAAe,EAAKA,aAAaK,KAAlB,gBACpB,EAAKV,aAAe,EAAKA,aAAaU,KAAlB,gBAVV,E,gEAaO,IAAD,OAChBC,KAAKC,SAAS,CAAEJ,SAAS,IAEzBK,MADY,qCAEXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACRE,EAASF,EAASG,KAAlBD,MACP,EAAKL,SAAS,CACVJ,SAAS,EACTC,QAASQ,EACTtB,QAASsB,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,SAASC,W,mCAKxDC,GAAQ,IAAD,EACMA,EAAMC,OAArBvB,EADS,EACTA,KAAMC,EADG,EACHA,MACbQ,KAAKC,SAAL,eACKV,EAAOC,M,mCAIHqB,GACT,IAAME,EAAYf,KAAKjB,MAAMe,QAAQU,KAAKC,MAAMD,KAAKE,SAAWV,KAAKjB,MAAMe,QAAQa,SAASC,IAC5FZ,KAAKC,SAAS,CACVjB,QAAS+B,IAEbF,EAAMG,mB,+BAIN,OACI,mCAAGhB,KAAKjB,MAAMc,QACV,4CACA,+BACI,cAAC,EAAD,CACIR,aAAcW,KAAKX,aACnBK,aAAcM,KAAKN,aACnBX,MAAOiB,KAAKjB,gB,GApDRkC,aCUbC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6c658090.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Header() {\n    return(\n        <header>\n            <div className=\"logoText\">The Worst<br />Meme Generator.</div>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\"\n\nfunction MemeApp(props) {\n    return (\n        <div className=\"memeApp\">\n            <div className=\"memeRender\">\n                <img src={props.state.memeImg} alt=\"Meme\"/>\n                <h2 className=\"top\">{props.state.topText}</h2>\n                <h2 className=\"bottom\">{props.state.bottomText}</h2>\n            </div>\n            <form onSubmit={props.handleSubmit}>\n                <input type=\"text\"\n                    name=\"topText\"\n                    value={props.state.topText}\n                    onChange={props.handleChange}\n                    placeholder=\"TOP TEXT\"\n                />\n                <input type=\"text\"\n                    name=\"bottomText\"\n                    value={props.state.bottomText}\n                    onChange={props.handleChange}\n                    placeholder=\"BOTTOM TEXT\"\n                />\n                <button>New Meme</button>\n            </form>\n        </div>\n    )\n}\n\nexport default MemeApp","import React, {Component} from \"react\"\nimport MemeApp from \"./MemeApp\"\n\nclass MemeGenerator extends Component {\n    constructor() {\n        super()\n        this.state = {\n            loading: false,\n            topText: \"\",\n            bottomText: \"\",\n            memeImg: \"\",\n            memeAPI: []\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        const API = \"https://api.imgflip.com/get_memes\"\n        fetch(API)\n        .then(response => response.json())\n        .then(response => {\n            const {memes} = response.data\n            this.setState({\n                loading: false,\n                memeAPI: memes,\n                memeImg: memes[Math.floor(Math.random() * memes.length)].url\n            })\n        })\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit(event) {\n        const RAND_MEME = this.state.memeAPI[Math.floor(Math.random() * this.state.memeAPI.length)].url\n        this.setState({\n            memeImg: RAND_MEME\n        })\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <>{this.state.loading ?\n                <h2>Loading...</h2> :\n                <main>\n                    <MemeApp\n                        handleSubmit={this.handleSubmit}\n                        handleChange={this.handleChange}\n                        state={this.state}\n                    />\n                </main>\n            }</>\n        )\n    }\n}\n\nexport default MemeGenerator","import './App.css';\nimport Header from './Components/Header'\nimport MemeGenerator from './Components/MemeGenerator'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MemeGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}