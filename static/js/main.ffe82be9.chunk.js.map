{"version":3,"sources":["Components/Header.js","Components/MemeApp.js","Components/MemeGenerator.js","App.js","index.js"],"names":["Header","className","MemeApp","forwardRef","props","ref","src","state","memeImg","alt","topText","bottomText","onSubmit","handleSubmit","type","name","value","onChange","handleChange","placeholder","onClick","handleDownload","MemeGenerator","useState","loading","memeAPI","setState","useEffect","fetch","then","response","json","memes","data","Math","floor","random","length","url","componentRef","useRef","event","RAND_MEME","preventDefault","target","exportComponentAsJPEG","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAUeA,MARf,WACI,OACI,iCACI,sBAAKC,UAAU,WAAf,sBAAmC,uBAAnC,wB,qBC0BGC,EA7BCC,sBAAW,SAACC,EAAOC,GAAR,OACvB,sBAAKJ,UAAU,UAAf,UACI,sBAAKA,UAAU,aAAaI,IAAKA,EAAjC,UACI,qBAAKC,IAAKF,EAAMG,MAAMC,QAASC,IAAI,SACnC,oBAAIR,UAAU,MAAd,SAAqBG,EAAMG,MAAMG,UACjC,oBAAIT,UAAU,SAAd,SAAwBG,EAAMG,MAAMI,gBAExC,uBAAMC,SAAUR,EAAMS,aAAtB,UACI,uBAAOC,KAAK,OACRC,KAAK,UACLC,MAAOZ,EAAMG,MAAMG,QACnBO,SAAUb,EAAMc,aAChBC,YAAY,aAEhB,uBAAOL,KAAK,OACRC,KAAK,aACLC,MAAOZ,EAAMG,MAAMI,WACnBM,SAAUb,EAAMc,aAChBC,YAAY,gBAEhB,iDAEJ,sBAAKlB,UAAU,kBAAf,UACI,6DACA,wBAAQmB,QAAShB,EAAMiB,eAAgBpB,UAAU,eAAjD,kC,OC6CGqB,MAnEf,WAA0B,IAAD,EAEKC,mBAAS,CAC/BC,SAAS,EACTd,QAAS,GACTC,WAAY,GACZH,QAAS,GACTiB,QAAS,KAPQ,mBAEdlB,EAFc,KAEPmB,EAFO,KAUrBC,qBAAU,WACND,EAAS,CAAEF,SAAS,IAGpBI,MAFY,qCAGXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACRE,EAASF,EAASG,KAAlBD,MACPN,EAAS,CACLF,SAAS,EACThB,QAASwB,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,SAASC,IACzDb,QAASO,SAIlB,IAEH,IAqBMO,EAAeC,mBAErB,OACI,mCAAGjC,EAAMiB,QACL,4CACA,+BACI,cAAC,EAAD,CACIX,aApBK,SAAC4B,GAClB,IAAMC,EAAYnC,EAAMkB,QAAQS,KAAKC,MAAMD,KAAKE,SAAW7B,EAAMkB,QAAQY,SAASC,IAClFZ,EAAS,2BACFnB,GADC,IAEJC,QAASkC,KAEbD,EAAME,kBAeMzB,aA7BK,SAACuB,GAAW,IAAD,EACNA,EAAMG,OAArB7B,EADqB,EACrBA,KAAMC,EADe,EACfA,MACbU,EAAS,2BACFnB,GADC,kBAEHQ,EAAOC,MA0BAK,eAbO,SAACoB,GACpBI,gCAAsBN,IAaVhC,MAAOA,EACPF,IAAKkC,SClDVO,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ffe82be9.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Header() {\n    return(\n        <header>\n            <div className=\"logoText\">The Worst<br />Meme Generator.</div>\n        </header>\n    )\n}\n\nexport default Header","import React, { forwardRef } from \"react\"\n\nconst MemeApp = forwardRef((props, ref) => (\n    <div className=\"memeApp\">\n        <div className=\"memeRender\" ref={ref}>\n            <img src={props.state.memeImg} alt=\"Meme\"/>\n            <h2 className=\"top\">{props.state.topText}</h2>\n            <h2 className=\"bottom\">{props.state.bottomText}</h2>\n        </div>\n        <form onSubmit={props.handleSubmit}>\n            <input type=\"text\"\n                name=\"topText\"\n                value={props.state.topText}\n                onChange={props.handleChange}\n                placeholder=\"TOP TEXT\"\n            />\n            <input type=\"text\"\n                name=\"bottomText\"\n                value={props.state.bottomText}\n                onChange={props.handleChange}\n                placeholder=\"BOTTOM TEXT\"\n            />\n            <button>New Meme</button>\n        </form>\n        <div className=\"downloadSection\">\n            <p>This is the worst meme ever!</p>\n            <button onClick={props.handleDownload} className=\"downloadMeme\">Download It</button>\n        </div>\n    </div>\n))\n\nexport default MemeApp","import React, {useEffect, useRef, useState} from \"react\"\nimport MemeApp from \"./MemeApp\"\nimport { exportComponentAsJPEG, exportComponentAsPDF, exportComponentAsPNG } from 'react-component-export-image'\n\nfunction MemeGenerator() {\n\n    const [state, setState] = useState({\n        loading: false,\n        topText: \"\",\n        bottomText: \"\",\n        memeImg: \"\",\n        memeAPI: []\n    })\n\n    useEffect(() => {\n        setState({ loading: true })\n        const API = \"https://api.imgflip.com/get_memes\"\n\n        fetch(API)\n        .then(response => response.json())\n        .then(response => {\n            const {memes} = response.data\n            setState({\n                loading: false,\n                memeImg: memes[Math.floor(Math.random() * memes.length)].url,\n                memeAPI: memes\n            })\n        })\n\n    }, [])\n\n    const handleChange = (event) => {\n        const {name, value} = event.target\n        setState({\n            ...state,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = (event) => {\n        const RAND_MEME = state.memeAPI[Math.floor(Math.random() * state.memeAPI.length)].url\n        setState({\n            ...state,\n            memeImg: RAND_MEME\n        })\n        event.preventDefault()\n    }\n\n    const handleDownload = (event) => {\n        exportComponentAsJPEG(componentRef)\n    }\n\n    const componentRef = useRef()\n\n    return (\n        <>{state.loading ?\n            <h2>Loading...</h2> :\n            <main>\n                <MemeApp\n                    handleSubmit={handleSubmit}\n                    handleChange={handleChange}\n                    handleDownload={handleDownload}\n                    state={state}\n                    ref={componentRef}\n                />\n            </main>\n        }</>\n    )\n\n}\n\nexport default MemeGenerator","import './App.css';\nimport Header from './Components/Header'\nimport MemeGenerator from './Components/MemeGenerator'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MemeGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}